#!/bin/bash

DATA_FILE="git.txt"
CGIT_REPO="cgit.repo"

source ~/bin/function/title.sh

function log()
{
	echo -e "\e[32m$1\e[0m"
}

function usage()
{
	echo "Usage:"
	echo "    ${0##*/} [pull|push|fetch|status|clean|tidy|clone|wipe]"
	exit 1
}

function get_dirs()
{
	local dir_list="$(find . -type d -name .git | sort | cut -b3-)"
	for i in $dir_list; do
		[ "$i" = ".git" ] && i=.
		DIRS="$DIRS ${i%/*}"
	done
	DIRS="$DIRS $(find . -type d -name "?*.git" | sort | cut -b3-)"
}

function git_fetch()
{
	for i in $DIRS; do
		title git fetch $i
		log $i
		pushd $i > /dev/null
		[ -n "$(git remote)" ] && git fetch origin master:master
		popd > /dev/null
	done
}

function git_push()
{
	for i in $DIRS; do
		title git push $i
		log $i
		pushd $i > /dev/null
		[ -n "$(git remote)" ] && git push
		popd > /dev/null
	done
}

function git_pull()
{
	for i in $DIRS; do
		title git pull $i
		log $i
		pushd $i > /dev/null
		if [ -n "$(git remote)" ]; then
			BARE="$(git config --get core.bare)"
			if [ "$BARE" = "true" ]; then
				git fetch origin master:master
			else
				git pull
			fi
		fi
		popd > /dev/null
	done
}

function git_status()
{
	for i in $DIRS; do
		title git status $i
		log $i
		pushd $i > /dev/null
		BARE="$(git config --get core.bare)"
		if [ "$BARE" = "false" ]; then
			git stash list
			git status -s
		fi
		popd > /dev/null
	done
}

function git_clean()
{
	local SURE
	read -p "Are you sure [y/N]?" -t 3 -n 1 SURE
	echo
	[ "$SURE" != "y" ] && return
	for i in $DIRS; do
		title git clean $i
		log $i
		pushd $i > /dev/null
		git clean -dxf
		popd > /dev/null
	done
}

function git_tidy()
{
	for i in $DIRS; do
		title git tidy $i
		log $i
		pushd $i > /dev/null
		git prune
		git gc #--aggressive
		git fsck --full --strict
		popd > /dev/null
	done
}

function git_clone()
{
	cat "$DATA_FILE" | while read DIR GIT; do
		if [ -d $DIR ]; then
			echo $DIR already exists
		else
			title git clone $DIR
			log $DIR
			git clone $GIT $DIR

			if [ ! -f "$CGIT_REPO" ]; then
				echo "repo.group=terminal"		>  "$CGIT_REPO"
				echo "#repo.owner=rich@flatcap.org"	>> "$CGIT_REPO"
				echo					>> "$CGIT_REPO"
			fi

			echo "repo.url=$DIR"				>> "$CGIT_REPO"
			echo "repo.path=/home/work/terminal/git/$DIR/.git"	>> "$CGIT_REPO"
			echo "repo.desc=$DIR"				>> "$CGIT_REPO"
			echo						>> "$CGIT_REPO"
		fi
	done

	chmod 664 "$CGIT_REPO"
	chcon -t public_content_t "$CGIT_REPO"
}

function git_wipe()
{
	local SURE
	read -p "Are you sure [y/N]?" -t 3 -n 1 SURE
	echo
	[ "$SURE" != "y" ] && return
	for i in $DIRS; do
		title git wipe $i
		log $i
		rm -fr $i
	done
}


[ $# -ne 1 ] && usage

umask 0002
get_dirs

case $1 in
	push)
		git_push ;;
	pull)
		git_pull ;;
	fetch)
		git_fetch ;;
	status)
		git_status ;;
	clean)
		git_clean ;;
	tidy)
		git_tidy ;;
	clone)
		git_clone ;;
	wipe)
		git_wipe ;;
	*)
		usage ;;
esac

title

