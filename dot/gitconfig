[advice]
	statusHints = false
	detachedHead = false

[alias]
	b        = branch --verbose --verbose
	bd       = !git branch --merged | grep -v \"*\" | xargs -n1 git branch -d
	d        = diff
	ds       = diff --stat
	initm    = "!f() { cd ${GIT_PREFIX:-.}; git init --template= && git commit --allow-empty --message \"$*\"; }; f"
	j        = jump diff
	lca      = "!f() { git merge-base ${1:-master} ${2:-HEAD} | cut -b-7; }; f"
	p        = push
	pr       = "!f() { git remote | xargs -n1 git push --verbose --tags; }; f"
	r        = remote --verbose
	tidy     = "!f() { git fsck --full --strict; git gc --aggressive; git prune; }; f"

	; grep-all = "!f() { cd ${GIT_PREFIX:-.}; STRING=\"$1\"; shift; git rev-list --all | xargs -r -I{} git grep -e \"$STRING\" {} -- \"$@\"; }; f"
	; mkobject = hash-object --stdin -w

	# add
	a        = "!f() { cd ${GIT_PREFIX:-.}; git add \"${@:-.}\"; }; f"
	ap       = add --patch
	unstage  = reset HEAD --

	# commit
	amend    = commit --amend
	ce       = commit --allow-empty
	cam      = "!f() { git commit --all --message \"$*\"; }; f"
	camp     = "!f() { git commit --all --message \"$*\"; X=$(git remote); [ -n \"$X\" ] && git push; }; f"
	cm       = "!f() { git commit --message \"$*\"; }; f"

	# hiding
	hidden   = "!f() { git ls-files -v | sed -n '/^[a-z]/{s/^..//;p}'; }; f"
	hide     = update-index --assume-unchanged
	unhide   = "!f() { git update-index --no-assume-unchanged; }; f"

	# logs
	l        = log --branches --graph --pretty=tidy -n 30
	ll       = log --branches --graph --pretty=tidy
	ln       = log --branches --graph --pretty=named
	ls       = log --branches --graph --stat
	since    = log --branches --graph --pretty=tidy --since
	when     = log --pretty=tidy --diff-filter=A

	# rebase
	rb       = rebase --committer-date-is-author-date
	ri       = rebase --committer-date-is-author-date --interactive --autosquash
	fix      = "!f() { SEARCH=\"$1\"; shift; git commit --fixup  $(git log -n 1 --format='%h' --grep \"^$SEARCH\") \"$@\"; }; f"
	sq       = "!f() { SEARCH=\"$1\"; shift; git commit --squash $(git log -n 1 --format='%h' --grep \"^$SEARCH\") \"$@\"; }; f"

	# stash
	pop      = stash pop
	save     = stash save

	# status
	s        = "!f() { git stash list; git status --short \"$@\"; }; f"
	sb       = "!f() { git branch --verbose --verbose; git stash list; git status --short; }; f"
	st       = status
	stats    = "!f() { W=$(git rev-list --count --max-age $(date -d \"-1 week\" +%s) HEAD); M=$(git rev-list --count --max-age $(date -d \"-1 month\" +%s) HEAD); A=$(git rev-list --count HEAD); echo $W/$M/$A commits; }; f"

[color "branch"]
	current = green
	local   = white
	remote  = cyan

[color "diff"]
	meta       = green
	frag       = cyan
	old        = red
	new        = yellow
	whitespace = red reverse

[color "status"]
	added     = yellow
	changed   = green
	untracked = cyan

[color]
	branch = auto
	diff   = auto
	status = auto

[commit]
	template = ~/.gitmessage

[core]
	whitespace     = blank-at-eol,space-before-tab,indent-with-non-tab,tabwidth=8,-blank-at-eof
	pager          = "less -eFfiqrX"
	preloadindex   = true
	attributesfile = ~/.gitattributes
	excludesfile   = ~/.gitignore

[diff "xz"]
	textconv = xz --decompress --stdout

[difftool]
	prompt = no

[diff]
	mnemonicprefix = true
	tool           = vimdiff
	guitool        = vimdiff

[github]
	user  = flatcap
	token = 87f49c3aebb08f1add7b59c1e3f57cd0

[gpg]
	program = gpg2

[grep]
	# lineNumber = true
	extendedRegexp = true

[help]
	autocorrect = 0

[include]
	# path = ~/.gitconfig-private

[init]
	# templatedir = ~/.git_template

[interactive]
	singlekey = true

[log]
	abbrevCommit = true
	date = relative

[mailmap]
	file = ~/.gitmailmap

[mergetool]
	prompt = false

[merge]
	tool    = vimdiff
	guitool = vimdiff

[pretty]
	tidy  = %Cred%h%Creset %s %Cgreen(%cr)%Creset%C(yellow)%d%Creset
	named = %Cred%h%Creset %s %Cgreen(%cr)%Creset%C(yellow)%d%Creset %C(white dim)%an <%ae>%Creset

[push]
	default = matching

[rebase]
	autosquash = true

[rerere]
	enabled = true

[url "git@gist.github.com:/"]
	insteadOf = "gist:"
	pushInsteadOf = "https://gist.github.com/"

[url "git://github.com/"]
	insteadOf = "gh:"

[url "git@github.com:flatcap/"]
	insteadOf = "rich:"
	pushInsteadOf = "https://github.com/flatcap/"

[user]
	email = rich@flatcap.org
	name = Richard Russon
	signingkey = Richard Russon (Code Signing) <rich@flatcap.org>

